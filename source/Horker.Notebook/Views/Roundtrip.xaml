<UserControl x:Name="RoundtripControl" x:Class="Horker.Notebook.Views.Roundtrip"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Horker.Notebook.Views"
             xmlns:models="clr-namespace:Horker.Notebook.Models"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Loaded="RoundtripControl_Loaded" PreviewMouseWheel="Roundtrip_PreviewMouseWheel">

    <UserControl.Resources>
        <RoutedCommand x:Key="EnterCommand" />
        <RoutedCommand x:Key="ShiftEnterCommand" />
        <RoutedCommand x:Key="CtrlEnterCommand" />
        <RoutedCommand x:Key="PreviousRoundtripCommand" />
        <RoutedCommand x:Key="NextRoundtripCommand" />
        <RoutedCommand x:Key="InsertTabCommand" />
        <RoutedCommand x:Key="UpCommand" />
        <RoutedCommand x:Key="DownCommand" />
        <RoutedCommand x:Key="CursorToTopCommand" />
        <RoutedCommand x:Key="CursorToBottomCommand" />
    </UserControl.Resources>

    <UserControl.CommandBindings>
        <CommandBinding Command="{StaticResource EnterCommand}" Executed="EnterCommand_Execute"/>
        <CommandBinding Command="{StaticResource ShiftEnterCommand}" Executed="ShiftEnterCommand_Execute"/>
        <CommandBinding Command="{StaticResource CtrlEnterCommand}" Executed="CtrlEnterCommand_Execute"/>
        <CommandBinding Command="{StaticResource PreviousRoundtripCommand}" Executed="PreviousRoundtripCommand_Execute"/>
        <CommandBinding Command="{StaticResource NextRoundtripCommand}" Executed="NextRoundtripCommand_Execute"/>
        <CommandBinding Command="{StaticResource InsertTabCommand}" Executed="InsertTabCommand_Execute"/>
        <CommandBinding Command="{StaticResource UpCommand}" Executed="UpCommand_Execute"/>
        <CommandBinding Command="{StaticResource DownCommand}" Executed="DownCommand_Execute"/>
        <CommandBinding Command="{StaticResource CursorToTopCommand}" Executed="CursorToTopCommand_Execute"/>
        <CommandBinding Command="{StaticResource CursorToBottomCommand}" Executed="CursorToBottomCommand_Execute"/>
    </UserControl.CommandBindings>

    <Grid Margin="0,1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <TextBox Grid.Column="0" x:Name="Index" Text="{Binding IndexString, Mode=OneWay}" Background="Gainsboro" IsReadOnly="true" FontFamily="{x:Static models:Configuration.FontFamily}" FontSize="{x:Static models:Configuration.FontSize}" Foreground="DarkGray" Margin="0,0,2,0">
            <TextBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Insert new" x:Name="InsertNewRoundtrip" Click="InsertNewRoundtrip_Click" />
                    <MenuItem Header="Delete" x:Name="DeleteRoundtrip" Click="DeleteRoundtrip_Click" />
                    <MenuItem Header="Clear output" x:Name="DeleteOutput" Click="ClearOutput_Click" />
                    <Separator/>
                    <MenuItem Header="Up" x:Name="MoveUpRoundtrip" Click="MoveUpRoundtrip_Click" />
                    <MenuItem Header="Down" x:Name="MoveDownRoundtrip" Click="MoveDownRoundtrip_Click" />
                    <Separator/>
                    <MenuItem Header="Editor mode" x:Name="EditMode" IsCheckable="true" IsChecked="{Binding IsEditorMode}" Click="EditorMode_Click"/>
                </ContextMenu>
            </TextBox.ContextMenu>
        </TextBox>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Border BorderThickness="2">
                <!--https://stackoverflow.com/questions/6195395/how-can-i-achieve-a-dashed-or-dotted-border-in-wpf -->
                <Border.BorderBrush>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Rectangle x:Name="CommandLineBorderRectangle" StrokeDashArray="{x:Null}" Stroke="#FFABADB3" StrokeThickness="1"
                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Border.BorderBrush>
                <RichTextBox Grid.Row="0" x:Name="CommandLine" VerticalAlignment="Top" Background="WhiteSmoke" MinHeight="20" AcceptsReturn="true" AcceptsTab="true" FontFamily="{x:Static models:Configuration.FontFamily}" FontSize="{x:Static models:Configuration.FontSize}" MinWidth="{x:Static models:Configuration.CommandLineWidth}" GotKeyboardFocus="CommandLine_GotKeyboardFocus" LostKeyboardFocus="CommandLine_LostKeyboardFocus" BorderThickness="0">
                    <RichTextBox.InputBindings>
                        <KeyBinding Gesture="Enter" Command="{StaticResource EnterCommand}"/>
                        <KeyBinding Gesture="Shift+Enter" Command="{StaticResource ShiftEnterCommand}"/>
                        <KeyBinding Gesture="Ctrl+Enter" Command="{StaticResource CtrlEnterCommand}"/>
                        <KeyBinding Gesture="Ctrl+Up" Command="{StaticResource PreviousRoundtripCommand}"/>
                        <KeyBinding Gesture="Ctrl+Down" Command="{StaticResource NextRoundtripCommand}"/>
                        <KeyBinding Gesture="Tab" Command="{StaticResource InsertTabCommand}"/>
                        <KeyBinding Gesture="Up" Command="{StaticResource UpCommand}"/>
                        <KeyBinding Gesture="Down" Command="{StaticResource DownCommand}"/>
                        <KeyBinding Gesture="Ctrl+Left" Command="{StaticResource CursorToTopCommand}"/>
                        <KeyBinding Gesture="Ctrl+Right" Command="{StaticResource CursorToBottomCommand}"/>
                    </RichTextBox.InputBindings>

                    <FlowDocument PagePadding="0">
                        <FlowDocument.Resources>
                            <Style TargetType="{x:Type Paragraph}">
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="TextAlignment" Value="Left"/>
                            </Style>
                        </FlowDocument.Resources>
                    </FlowDocument>
                </RichTextBox>
            </Border>

            <FlowDocumentScrollViewer Grid.Row="1" x:Name="Output" VerticalAlignment="Top" MaxHeight="{x:Static models:Configuration.MaxOutputHeight}" FontFamily="{x:Static models:Configuration.FontFamily}" FontSize="{x:Static models:Configuration.FontSize}" VerticalScrollBarVisibility="Auto" Margin="5,2,5,0" Visibility="Collapsed" MinWidth="{x:Static models:Configuration.CommandLineWidth}" BorderBrush="Gray">
                <FlowDocument PagePadding="0">
                    <FlowDocument.Resources>
                        <Style TargetType="{x:Type Paragraph}">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="TextAlignment" Value="Left"/>
                            <Setter Property="FontFamily" Value="{x:Static models:Configuration.FontFamily}"/>
                            <Setter Property="FontSize" Value="{x:Static models:Configuration.FontSize}"/>
                        </Style>
                    </FlowDocument.Resources>
                </FlowDocument>
            </FlowDocumentScrollViewer>
        </Grid>
    </Grid>
</UserControl>
